<?php

return [
    'title' => 'Корень n-ой степени',
    'description' => [
        '1' =>
        "В разделе 1.3.3 мы видели, что попытка вычисления квадратных корней путем наивного поиска неподвижной точки ",
        '2' =>
        " не сходится, и что это можно исправить путем торможения усреднением. Тот же самый метод работает для нахождения кубического корня как неподвижной точки ",
        '3' =>
        ", заторможенной усреднением. К сожалению, этот процесс не работает для  корней четвертой степени — однажды примененного торможения усреднением недостаточно, " .
        "чтобы заставить сходиться процесс поиска неподвижной точки ",
        '4' =>
        ". С другой стороны, если мы применим торможение усреднением дважды (т.е. применим торможение усреднением к результату торможения усреднением от ",
        '5' =>
        "), то поиск неподвижной точки начнет сходиться. Проделайте эксперименты, чтобы понять, сколько торможений усреднением нужно, чтобы вычислить корень ",
        '6' =>
        "-ой степени как неподвижную точку на основе многократного торможения усреднением функции ",
        '7' =>
        ". Используя свои результаты для того, напишите простую процедуру вычисления корней ",
        '8' =>
        "-ой степени с помощью процедур ",
        '9' =>
        ", ",
        '10' =>
        " и ",
        '11' =>
        " из упражнения ",
        '12' =>
        ". Считайте, что все арифметические операции, какие Вам понадобятся, присутствуют в языке как примитивы.",
    ],
];
